#!/bin/sh
set -e

# Exit status codes.
S_OK=0
S_ERROR=1

INIT_OSM_EXTRACT_FILE_NAME="init-osm-extract.sh"

SCRIPT_DIR_PATH="${0%/*}"
SCRIPT_NAME="${0##*/}"

GENERIC_EXTRACT_FILE_NAME="extract-latest.osm.pbf"
GENERIC_EXTRACT_FILE_PATH="$SCRIPT_DIR_PATH/osm_extracts/$GENERIC_EXTRACT_FILE_NAME"

TILEMAKER_DIR_PATH="$SCRIPT_DIR_PATH/tilemaker"
TILEMAKER_EXTRACTS_DIR_NAME="extracts"
TILEMAKER_EXTRACTS_DIR_PATH="$TILEMAKER_DIR_PATH/$TILEMAKER_EXTRACTS_DIR_NAME"
TILEMAKER_ARTIFACTS_DIR_NAME="artifacts"
CONTAINER_WORKING_DIR_PATH="/mnt/tilemaker"

APP_MAP_TILES_DIR_PATH="$SCRIPT_DIR_PATH/../apps/wander_web/priv/static/map-tiles"
APP_MAP_TILE_CONFIG_FILE_PATH="$SCRIPT_DIR_PATH/../apps/wander_web/assets/wander/config/global.json"
APP_MAP_TILE_CONFIG_KEY="map.tile.region"

print_help() {
  cat << EOF
usage: ${SCRIPT_NAME} [-h | --help]

Generates vector map tiles as a '.pmtiles' file from the
'$GENERIC_EXTRACT_FILE_PATH'
file generated by $INIT_OSM_EXTRACT_FILE_NAME.

Make sure to run $INIT_OSM_EXTRACT_FILE_NAME first before using $SCRIPT_NAME.
EOF
}

# 'Help' option overrides all other arguments.
for arg in "$@"; do
  if [ "$arg" = "-h" ] || [ "$arg" = "--help" ]; then
    print_help
    exit $S_OK
  fi
done

# Parse arguments.
while [ $# -gt 0 ]; do
  case "$1" in
    # Options.
    -* )
      >&2 echo "error: Unknown option '$1'."
      exit $S_ERROR
      ;;

    # Non-option arguments.
    * )
      >&2 echo "error: Unknown argument '$1'."
      exit $S_ERROR
      ;;
  esac

  shift 1
done

INIT_OSM_EXTRACT_MSG="Run scripts/init-osm-extract.sh on an OSM extract."

if ! [ -L "$GENERIC_EXTRACT_FILE_PATH" ] && ! [ -e "$GENERIC_EXTRACT_FILE_PATH" ]; then
  >&2 echo "error: File '$GENERIC_EXTRACT_FILE_PATH' does not exist. ($INIT_OSM_EXTRACT_MSG)"
  exit $S_ERROR
fi
# Extract is some sort of file.

EXTRACT_FILE_PATH=$(readlink -f "$GENERIC_EXTRACT_FILE_PATH")

if [ -L "$EXTRACT_FILE_PATH" ] && ! [ -e "$EXTRACT_FILE_PATH" ]; then
  >&2 echo "error: Followed '$GENERIC_EXTRACT_FILE_PATH' but lead to broken symbolic link '$EXTRACT_FILE_PATH'. ($INIT_OSM_EXTRACT_MSG)"
  exit $S_ERROR
fi
# Extract is not a broken symlink.

if ! [ -e "$EXTRACT_FILE_PATH" ]; then
  >&2 echo "error: '$EXTRACT_FILE_PATH' is not a regular file. ($INIT_OSM_EXTRACT_MSG)"
  exit $S_ERROR
fi
# Extract is a regular file.

EXTRACT_FILE_NAME="${EXTRACT_FILE_PATH##*/}"
EXTRACT_COPY_FILE_PATH="$TILEMAKER_EXTRACTS_DIR_PATH/$EXTRACT_FILE_NAME"

echo "[INFO][$SCRIPT_NAME] Making temporary copy of extract for tilemaker container to use..."
cp -v "$EXTRACT_FILE_PATH" "$EXTRACT_COPY_FILE_PATH"

PMTILES_FILE_NAME_WITHOUT_EXTENSION="${EXTRACT_FILE_NAME%.pbf}"
PMTILES_FILE_NAME_WITHOUT_EXTENSION="${PMTILES_FILE_NAME_WITHOUT_EXTENSION%.osm}-shortbread"
PMTILES_FILE_NAME="$PMTILES_FILE_NAME_WITHOUT_EXTENSION.pmtiles"
PMTILES_FILE_PATH="$TILEMAKER_DIR_PATH/$TILEMAKER_ARTIFACTS_DIR_NAME/$PMTILES_FILE_NAME"

echo
echo "[INFO][$SCRIPT_NAME] Starting tilemaker container..."

set -x
docker run \
  -it --rm \
  -v "$TILEMAKER_DIR_PATH:$CONTAINER_WORKING_DIR_PATH" \
  -w "$CONTAINER_WORKING_DIR_PATH" \
  ghcr.io/systemed/tilemaker:master \
  "$CONTAINER_WORKING_DIR_PATH/$TILEMAKER_EXTRACTS_DIR_NAME/$EXTRACT_FILE_NAME" \
  --config config/shortbread.json \
  --process process/shortbread.lua \
  --output "$CONTAINER_WORKING_DIR_PATH/$TILEMAKER_ARTIFACTS_DIR_NAME/$PMTILES_FILE_NAME"
set +x

echo
echo "[INFO][$SCRIPT_NAME] Cleaning up temporary copy of extract..."
rm -v "$EXTRACT_COPY_FILE_PATH"

echo
echo "[INFO][$SCRIPT_NAME] Copying '.pmtiles' artifact to application..."
cp -vi "$PMTILES_FILE_PATH" "$APP_MAP_TILES_DIR_PATH"

echo
echo "[INFO][$SCRIPT_NAME] Map tiles generated!"
echo
echo "Set the \"$APP_MAP_TILE_CONFIG_KEY\" value to \"$PMTILES_FILE_NAME_WITHOUT_EXTENSION\" in the following config file to start using them:"
echo
echo "    $APP_MAP_TILE_CONFIG_FILE_PATH"
echo

